//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AllocationsApplication.GreedyAWS {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GreedyAWS.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Greedy", ReplyAction="http://tempuri.org/IService/GreedyResponse")]
        WcfsServiceLibrary.AllocationsData Greedy(int deadline, WcfsServiceLibrary.ConfigData cd);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/Greedy", ReplyAction="http://tempuri.org/IService/GreedyResponse")]
        System.IAsyncResult BeginGreedy(int deadline, WcfsServiceLibrary.ConfigData cd, System.AsyncCallback callback, object asyncState);
        
        WcfsServiceLibrary.AllocationsData EndGreedy(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : AllocationsApplication.GreedyAWS.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GreedyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GreedyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WcfsServiceLibrary.AllocationsData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WcfsServiceLibrary.AllocationsData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<AllocationsApplication.GreedyAWS.IService>, AllocationsApplication.GreedyAWS.IService {
        
        private BeginOperationDelegate onBeginGreedyDelegate;
        
        private EndOperationDelegate onEndGreedyDelegate;
        
        private System.Threading.SendOrPostCallback onGreedyCompletedDelegate;
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GreedyCompletedEventArgs> GreedyCompleted;
        
        public WcfsServiceLibrary.AllocationsData Greedy(int deadline, WcfsServiceLibrary.ConfigData cd) {
            return base.Channel.Greedy(deadline, cd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGreedy(int deadline, WcfsServiceLibrary.ConfigData cd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGreedy(deadline, cd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WcfsServiceLibrary.AllocationsData EndGreedy(System.IAsyncResult result) {
            return base.Channel.EndGreedy(result);
        }
        
        private System.IAsyncResult OnBeginGreedy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int deadline = ((int)(inValues[0]));
            WcfsServiceLibrary.ConfigData cd = ((WcfsServiceLibrary.ConfigData)(inValues[1]));
            return this.BeginGreedy(deadline, cd, callback, asyncState);
        }
        
        private object[] OnEndGreedy(System.IAsyncResult result) {
            WcfsServiceLibrary.AllocationsData retVal = this.EndGreedy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGreedyCompleted(object state) {
            if ((this.GreedyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GreedyCompleted(this, new GreedyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GreedyAsync(int deadline, WcfsServiceLibrary.ConfigData cd) {
            this.GreedyAsync(deadline, cd, null);
        }
        
        public void GreedyAsync(int deadline, WcfsServiceLibrary.ConfigData cd, object userState) {
            if ((this.onBeginGreedyDelegate == null)) {
                this.onBeginGreedyDelegate = new BeginOperationDelegate(this.OnBeginGreedy);
            }
            if ((this.onEndGreedyDelegate == null)) {
                this.onEndGreedyDelegate = new EndOperationDelegate(this.OnEndGreedy);
            }
            if ((this.onGreedyCompletedDelegate == null)) {
                this.onGreedyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGreedyCompleted);
            }
            base.InvokeAsync(this.onBeginGreedyDelegate, new object[] {
                        deadline,
                        cd}, this.onEndGreedyDelegate, this.onGreedyCompletedDelegate, userState);
        }
    }
}
